import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix

from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Sample synthetic dataset, 1=Apple, -1=Orange
data = np.zeros((100,3))
for i in range(100):
    if i<50:
        x = np.random.randint(200,240)
        y = np.random.randint(100,150)
        z = 1
    else:
        x = np.random.randint(15,40)
        y = np.random.randint(80,100)
        z = -1
    data[i] = np.array([[x,y,z]])
        


# Separate features (redness and weight) and labels (fruit type)
X = data[:, :2]
y = data[:, 2]

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=30)
X_test,X_val,y_test,y_val = train_test_split(X_test,y_test,test_size = 0.5,random_state = 30)

ACCURACY_TEST= []
ACCURACY_VAL = []
for i in [3,5,7]:
    
        # Create a KNN classifier with k=i
        knn_classifier = KNeighborsClassifier(n_neighbors=i)

        # Train the classifier on the training data
        knn_classifier.fit(X_train, y_train)

        print(f'test set for value of k = {i} \n',X_test)
        # Predict the fruit types for the test data
        y_pred = knn_classifier.predict(X_test)
        print('prediction set \n',y_pred) # 1 = Apple , -1 = orange

        # Calculate the accuracy of the model
        accuracy = accuracy_score(y_test, y_pred)
        ACCURACY_TEST.append(accuracy)



        #print(X_val)
        y_pred1 = knn_classifier.predict(X_val)
        #print(y_pred1)
        accuracy1 = accuracy_score(y_val,y_pred1)
        ACCURACY_VAL.append(accuracy1)

        #confusion matrix
        matrix = confusion_matrix(y_val, y_pred1)
        print(f"confusion_matrix validation for k =  {i}:\n",matrix)
        matrix1 = confusion_matrix(y_test,y_pred)
        print(f"confusion_matrix test for k = {i}:\n",matrix1)





print("Accuracy_TEST for different k:", ACCURACY_TEST)
print('Accuracy_val for different k:', ACCURACY_VAL)

df = pd.DataFrame(data, columns=['Redness', 'Weight', 'Fruit Type'])

# Plot the data samples
plt.figure(figsize=(8, 6))
for fruit_type in df['Fruit Type'].unique():
    subset = df[df['Fruit Type'] == fruit_type]
    plt.scatter(subset['Redness'], subset['Weight'], label=fruit_type)

plt.xlabel('Redness Value')
plt.ylabel('Weight (grams)')
plt.title('Apple vs Orange Classification')
plt.legend()
plt.show()
